let restaurants,neighborhoods,cuisines;var newMap,markers=[];const worker=new Worker("js/worker.js");worker.addEventListener("message",e=>{switch(e.data.cmd){case"fetch_cuisines":if(e.data.error)return void console.log(e.data.error);self.cuisines=e.data.cuisines,fillCuisinesHTML();break;case"fetch_neighborhoods":if(e.data.error)return void console.log(e.data.error);self.neighborhoods=e.data.neighborhoods,fillNeighborhoodsHTML();break;case"fetch_restaurant_cuisine_neighborhood":if(e.data.error)return void console.log(e.data.error);resetRestaurants(e.data.restaurants),fillRestaurantsHTML()}}),document.addEventListener("DOMContentLoaded",e=>{registerServiceWorker(),initMap(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{worker.postMessage({cmd:"fetch_neighborhoods"})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),fetchCuisines=(()=>{worker.postMessage({cmd:"fetch_cuisines"})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),initMap=(()=>{self.newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibGVtYSIsImEiOiJjamt0YXVla2MwM3NjM3dvZHQ0NDIwZmVpIn0.pOEFaPY6enCchIG29Lo2SQ",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),a=e.selectedIndex,r=t.selectedIndex,s=e[a].value,n=t[r].value;worker.postMessage({cmd:"fetch_restaurant_cuisine_neighborhood",cuisine:s,neighborhood:n})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.remove()),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),a=document.createElement("picture");a.className="restaurant-picture",t.append(a);const r=document.createElement("source");r.media="(min-width: 750px)",r.srcset=`${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-800_large_1x.jpg 1x`,r.srcset+=`,${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-1200_large_2x.jpg 2x`,a.append(r);const s=document.createElement("source");s.media="(min-width: 500px)",s.srcset=`${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-medium.jpg`,a.append(s);const n=document.createElement("img");n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e),n.alt="Image of the restaurant "+e.name,a.append(n);const o=document.createElement("div");o.className="restaurant-container",t.append(o);const c=document.createElement("div");c.className="restaurant-container__content",o.append(c);const i=document.createElement("h3");i.innerHTML=e.name,c.append(i);const d=document.createElement("p");d.innerHTML=e.neighborhood,c.append(d);const l=document.createElement("p");l.innerHTML=e.address,c.append(l);const m=document.createElement("a");return m.innerHTML="View Details",m.setAttribute("aria-label","View details of the restaurant "+e.name),m.href=DBHelper.urlForRestaurant(e),o.append(m),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.newMap);t.on("click",function(){window.location.href=t.options.url}),self.markers.push(t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
