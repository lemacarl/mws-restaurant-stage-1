let restaurant;var newMap;document.addEventListener("DOMContentLoaded",e=>{initMap(),registerServiceWorker()});const worker=new Worker("js/worker.js");worker.addEventListener("message",e=>{switch(e.data.cmd){case"fetch_reviews":if(e.data.error)return void console.log(e.data.error);generateReviewsHTML(e.data.reviews);break;case"fetch_restaurant":if(e.data.error)return void console.log(e.data.error);self.restaurant=e.data.restaurant,fillRestaurantHTML(),handleRestaurant(null,self.restaurant)}}),initMap=(()=>{fetchRestaurantFromURL()}),fetchRestaurantFromURL=(()=>{if(self.restaurant)return void handleRestaurant(null,self.restaurant);const e=getParameterByName("id");e?worker.postMessage({cmd:"fetch_restaurant",id:e}):(error="No restaurant id in URL",handleRestaurant(error,null))}),handleRestaurant=((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibGVtYSIsImEiOiJjamt0YXVla2MwM3NjM3dvZHQ0NDIwZmVpIn0.pOEFaPY6enCchIG29Lo2SQ",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address,document.getElementById("restaurant-picture").className="restaurant-picture";document.getElementById("favbutton");"false"===e.is_favorite?favbutton.className="heart-inactive":favbutton.className="heart-active";const t=document.getElementById("source-1");t.media="(min-width: 750px)",t.srcset=`${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-800_large_1x.jpg 1x`,t.srcset+=`,${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-1200_large_2x.jpg 2x`;const a=document.getElementById("source-2");a.media="(min-width: 500px)",a.srcset=`${DBHelper.imageUrlBasePath}${DBHelper.imageNameForRestaurant(e)}-medium.jpg`;const n=document.getElementById("restaurant-img");n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e),n.alt="Image of the restaurant "+e.name,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let a in e){const n=document.createElement("tr"),r=document.createElement("td");r.innerHTML=a,n.appendChild(r);const s=document.createElement("td");s.innerHTML=e[a],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{e?generateReviewsHTML(e):worker.postMessage({cmd:"fetch_reviews",id:self.restaurant.id})}),generateReviewsHTML=(e=>{document.getElementById("reviews-container");const t=document.getElementById("reviews-message");if(!e)return void(t.innerHTML="No reviews yet!");const a=document.getElementById("reviews-list");a.innerHTML="",t.innerHTML="",e.forEach(e=>{a.appendChild(createReviewHTML(e))})}),createReviewHTML=(e=>{const t=document.createElement("li"),a=document.createElement("div");a.className="review-header",t.appendChild(a);const n=document.createElement("h3");n.innerHTML=e.name,a.appendChild(n);const r=document.createElement("span");r.innerHTML=e.date,r.className="review-date",a.appendChild(r);const s=document.createElement("div");s.className="review-body",t.appendChild(s);const o=document.createElement("span");o.innerHTML=`Rating: ${e.rating}`,o.className="review-rating",s.appendChild(o);const i=document.createElement("p");return i.innerHTML=e.comments,s.appendChild(i),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),a=document.createElement("li");a.innerHTML=e.name,t.appendChild(a)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});const addReviewButton=document.getElementById("add-review");addReviewButton.addEventListener("click",e=>{e.preventDefault(),document.getElementById("submit-review").style.display="block",addReviewButton.setAttribute("aria-expanded",!0)});const postReviewButton=document.getElementById("post-review");postReviewButton.addEventListener("click",e=>{e.preventDefault();const t=document.getElementById("name"),a=document.getElementById("comments"),n=document.getElementById("rating");if(""===t.value||""===a.value||""===n.value)return;const r={};r.name=t.value,r.rating=n.value,r.comments=a.value,r.date=moment().format("MMMM D, YYYY"),r.synced=!1,t.value="",a.value="",n.value=-1,DBHelper.fetchRestaurantById(self.restaurant.id,(e,t)=>{t&&(self.restaurant=t,Array.isArray(self.restaurant.reviews)?self.restaurant.reviews.push(r):(self.restaurant.reviews=[],self.restaurant.reviews.push(r)),DBHelper.updateRestaurantReviews(self.restaurant).then(e=>{if(e){document.getElementById("submit-review").style.display="none",addReviewButton.setAttribute("aria-expanded",!1);const e=Toast.create({text:"Review submitted."});Toast.setTimeout(e.id,2e3),fillReviewsHTML()}}))})});const favButton=document.getElementById("favbutton");favbutton.addEventListener("click",e=>{e.preventDefault(),favbutton.classList.contains("heart-active")?(self.restaurant.is_favorite=!1,favbutton.className="heart-inactive",DBHelper.favoriteRestaurant(self.restaurant)):(self.restaurant.is_favorite=!0,favbutton.className="heart-active",DBHelper.favoriteRestaurant(self.restaurant))}),window.addEventListener("offline",()=>{const e=Toast.create({text:"Unable to connect. Retrying..."});Toast.setTimeout(e.id,5e3)}),window.addEventListener("online",()=>{worker.postMessage({cmd:"sync_reviews"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RhdXJhbnRfaW5mby5qcyJdLCJuYW1lcyI6WyJyZXN0YXVyYW50IiwibmV3TWFwIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJpbml0TWFwIiwicmVnaXN0ZXJTZXJ2aWNlV29ya2VyIiwid29ya2VyIiwiV29ya2VyIiwiZSIsImRhdGEiLCJjbWQiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJnZW5lcmF0ZVJldmlld3NIVE1MIiwicmV2aWV3cyIsInNlbGYiLCJmaWxsUmVzdGF1cmFudEhUTUwiLCJmZXRjaFJlc3RhdXJhbnRGcm9tVVJMIiwiaWQiLCJnZXRQYXJhbWV0ZXJCeU5hbWUiLCJwb3N0TWVzc2FnZSIsImhhbmRsZVJlc3RhdXJhbnQiLCJMIiwibGF0bG5nIiwibGF0IiwibG5nIiwiem9vbSIsImNlbnRlciIsInNjcm9sbFdoZWVsWm9vbSIsIm1hcGJveFRva2VuIiwibWF4Wm9vbSIsImF0dHJpYnV0aW9uIiwibWFwTWFya2VyRm9yUmVzdGF1cmFudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwibmFtZSIsImlzX2Zhdm9yaXRlIiwiZmF2YnV0dG9uIiwiY2xhc3NOYW1lIiwic3JjMSIsIm1lZGlhIiwiREJIZWxwZXIiLCJpbWFnZVVybEJhc2VQYXRoIiwiaW1hZ2VOYW1lRm9yUmVzdGF1cmFudCIsInNyY3NldCIsInNyYzIiLCJpbWFnZSIsInNyYyIsImFsdCIsImltYWdlVXJsRm9yUmVzdGF1cmFudCIsImN1aXNpbmUiLCJvcGVyYXRpbmdfaG91cnMiLCJjdWlzaW5lX3R5cGUiLCJmaWxsUmVzdGF1cmFudEhvdXJzSFRNTCIsImZpbGxSZXZpZXdzSFRNTCIsImhvdXJzIiwia2V5Iiwib3BlcmF0aW5nSG91cnMiLCJyb3ciLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJkYXkiLCJ0aW1lIiwicmV2aWV3c01zZyIsInVsIiwiY3JlYXRlUmV2aWV3SFRNTCIsImZvckVhY2giLCJyZXZpZXciLCJkaXYiLCJsaSIsImRhdGUiLCJib2R5IiwicmF0aW5nIiwiY29tbWVudHMiLCJmaWxsQnJlYWRjcnVtYiIsImJyZWFkY3J1bWIiLCJ1cmwiLCJyZXN1bHRzIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsIlJlZ0V4cCIsImV4ZWMiLCJhZGRSZXZpZXdCdXR0b24iLCJwcmV2ZW50RGVmYXVsdCIsInBvc3RSZXZpZXdCdXR0b24iLCJtb21lbnQiLCJmb3JtYXQiLCJ2YWx1ZSIsImZldGNoUmVzdGF1cmFudEJ5SWQiLCJzeW5jZWQiLCJpc0FycmF5IiwiZm9ybSIsImRpc3BsYXkiLCJBcnJheSIsInRvYXN0IiwiVG9hc3QiLCJ0ZXh0IiwicHVzaCIsInVwZGF0ZVJlc3RhdXJhbnRSZXZpZXdzIiwidGhlbiIsInJlc3VsdCIsInN0eWxlIiwic2V0QXR0cmlidXRlIiwiY3JlYXRlIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJmYXZCdXR0b24iLCJ3aW5kb3ciLCJzZXRUaW1lb3V0IiwiZmF2b3JpdGVSZXN0YXVyYW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUNKLElBQUlDLE9BS0pDLFNBQVNDLGlCQUFpQixtQkFBcUJDLElBQzdDQyxVQUNBQywwQkFNRixNQUFNQyxPQUFTLElBQUlDLE9BQU8sZ0JBQzFCRCxPQUFPSixpQkFBaUIsVUFBV00sSUFDakMsT0FBQUEsRUFBUUMsS0FBREMsS0FDTCxJQUFLLGdCQUNILEdBQUlGLEVBQUVDLEtBQUtFLE1BRVQsWUFEQUMsUUFBUUMsSUFBSUwsRUFBRUMsS0FBS0UsT0FJckJHLG9CQUFvQk4sRUFBRUMsS0FBS00sU0FDM0IsTUFDRixJQUFLLG1CQUFMLEdBQUtQLEVBQUFDLEtBQUFFLE1BRURDLFlBREZBLFFBQUlDLElBQU9GLEVBQVhGLEtBQWtCRSxPQUtsQkssS0FBS2pCLFdBQWFTLEVBQUVDLEtBQUtWLFdBQXpCaUIscUJBQ0FDLGlCQUFBQSxLQUFrQkQsS0FBQWpCLGVBU3hCSyxRQUFVLE1BQVZBLDJCQU9BYyx1QkFBeUIsTUFDdkIs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bUUsV0FBVUMsRUFBQUEsR0FBUyxLQUUvQnBFLDBCQUxKLE1BQU1xRSxVQUFZMUcsU0FBU2lDLGVBQWUsYUFDMUNJLFVBQVVwQyxpQkFBaUIsUUFBU00sSUFpQnBDb0csRUFBQUEsaUJBQ0V0RSxVQUFjMEQsVUFBTVEsU0FBTyxpQkFDekJQLEtBQUlsRyxXQUFFc0MsYUFBQSxFQURSQyxVQUFBQyxVQUFBLGlCQUlBeUQsU0FBTWEsbUJBQXFCN0YsS0FBM0JqQixjQWRFaUIsS0FBS2pCLFdBQVdzQyxhQUFjLEVBQzlCQyxVQUFVQyxVQUFZLGVBQ3RCRyxTQUFTb0UsbUJBQW1COUYsS0FBS2pCLGVBT3JDNkcsT0FBTzFHLGlCQUFpQixVQUFXLEtBQ2pDLE1BQU02RixFQUFRQyxNQUFNUSxPQUFPLENBQ3pCUCxLQUFNLG1DQUdSRCxNQUFNYSxXQUFXZCxFQUFNNUUsR0FBSSxPQU03QnlGLE9BQU8xRyxpQkFBaUIsU0FBVSxLQUNoQ0ksT0FBT2UsWUFBWSxDQUNqQlgsSUFBSyIsImZpbGUiOiJyZXN0YXVyYW50X2luZm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcmVzdGF1cmFudDtcbnZhciBuZXdNYXA7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBtYXAgYXMgc29vbiBhcyB0aGUgcGFnZSBpcyBsb2FkZWQuXG4gKi9cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoZXZlbnQpID0+IHsgIFxuICBpbml0TWFwKCk7XG4gIHJlZ2lzdGVyU2VydmljZVdvcmtlcigpO1xufSk7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB3b3JrZXJcbiAqL1xuY29uc3Qgd29ya2VyID0gbmV3IFdvcmtlcignanMvd29ya2VyLmpzJyk7XG53b3JrZXIuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGUgPT4ge1xuICBzd2l0Y2goZS5kYXRhLmNtZCkge1xuICAgIGNhc2UgJ2ZldGNoX3Jldmlld3MnOlxuICAgICAgaWYgKGUuZGF0YS5lcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlLmRhdGEuZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGdlbmVyYXRlUmV2aWV3c0hUTUwoZS5kYXRhLnJldmlld3MpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZmV0Y2hfcmVzdGF1cmFudCc6XG4gICAgICBpZiAoZS5kYXRhLmVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUuZGF0YS5lcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc2VsZi5yZXN0YXVyYW50ID0gZS5kYXRhLnJlc3RhdXJhbnQ7XG4gICAgICBmaWxsUmVzdGF1cmFudEhUTUwoKTtcbiAgICAgIGhhbmRsZVJlc3RhdXJhbnQobnVsbCwgc2VsZi5yZXN0YXVyYW50KTtcbiAgICAgIGJyZWFrO1xuICB9XG59KTtcblxuLyoqXG4gKiBJbml0aWFsaXplIGxlYWZsZXQgbWFwXG4gKi9cbmluaXRNYXAgPSAoKSA9PiB7XG4gIGZldGNoUmVzdGF1cmFudEZyb21VUkwoKTtcbn0gIFxuIFxuLyoqXG4gKiBHZXQgY3VycmVudCByZXN0YXVyYW50IGZyb20gcGFnZSBVUkwuXG4gKi9cbmZldGNoUmVzdGF1cmFudEZyb21VUkwgPSAoKSA9PiB7XG4gIGlmIChzZWxmLnJlc3RhdXJhbnQpIHsgLy8gcmVzdGF1cmFudCBhbHJlYWR5IGZldGNoZWQhXG4gICAgaGFuZGxlUmVzdGF1cmFudChudWxsLCBzZWxmLnJlc3RhdXJhbnQpXG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICBjb25zdCBpZCA9IGdldFBhcmFtZXRlckJ5TmFtZSgnaWQnKTtcbiAgaWYgKCFpZCkgeyAvLyBubyBpZCBmb3VuZCBpbiBVUkxcbiAgICBlcnJvciA9ICdObyByZXN0YXVyYW50IGlkIGluIFVSTCdcbiAgICBoYW5kbGVSZXN0YXVyYW50KGVycm9yLCBudWxsKTtcbiAgfSBcbiAgZWxzZSB7XG4gICAgd29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICAgIGNtZDogJ2ZldGNoX3Jlc3RhdXJhbnQnLFxuICAgICAgaWQ6IGlkXG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBIYW5kbGUgcmVzdGF1cmFudCBjYWxsYmFja1xuICovXG5oYW5kbGVSZXN0YXVyYW50ID0gKGVycm9yLCByZXN0YXVyYW50KSA9PiB7XG4gIGlmIChlcnJvcikgeyAvLyBHb3QgYW4gZXJyb3IhXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gIH0gXG4gIGVsc2UgeyAgICAgIFxuICAgIHNlbGYubmV3TWFwID0gTC5tYXAoJ21hcCcsIHtcbiAgICAgIGNlbnRlcjogW3Jlc3RhdXJhbnQubGF0bG5nLmxhdCwgcmVzdGF1cmFudC5sYXRsbmcubG5nXSxcbiAgICAgIHpvb206IDE2LFxuICAgICAgc2Nyb2xsV2hlZWxab29tOiBmYWxzZVxuICAgIH0pO1xuICAgIEwudGlsZUxheWVyKCdodHRwczovL2FwaS50aWxlcy5tYXBib3guY29tL3Y0L3tpZH0ve3p9L3t4fS97eX0uanBnNzA/YWNjZXNzX3Rva2VuPXttYXBib3hUb2tlbn0nLCB7XG4gICAgICBtYXBib3hUb2tlbjogJ3BrLmV5SjFJam9pYkdWdFlTSXNJbUVpT2lKamFtdDBZWFZsYTJNd00zTmpNM2R2WkhRME5ESXdabVZwSW4wLnBPRUZhUFk2ZW5DY2hJRzI5TG8yU1EnLFxuICAgICAgbWF4Wm9vbTogMTgsXG4gICAgICBhdHRyaWJ1dGlvbjogJ01hcCBkYXRhICZjb3B5OyA8YSBocmVmPVwiaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvXCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzLCAnICtcbiAgICAgICAgJzxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgJyArXG4gICAgICAgICdJbWFnZXJ5IMKpIDxhIGhyZWY9XCJodHRwczovL3d3dy5tYXBib3guY29tL1wiPk1hcGJveDwvYT4nLFxuICAgICAgaWQ6ICdtYXBib3guc3RyZWV0cycgICAgXG4gICAgfSkuYWRkVG8obmV3TWFwKTtcbiAgICBmaWxsQnJlYWRjcnVtYigpO1xuICAgIERCSGVscGVyLm1hcE1hcmtlckZvclJlc3RhdXJhbnQoc2VsZi5yZXN0YXVyYW50LCBzZWxmLm5ld01hcCk7XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgcmVzdGF1cmFudCBIVE1MIGFuZCBhZGQgaXQgdG8gdGhlIHdlYnBhZ2VcbiAqL1xuZmlsbFJlc3RhdXJhbnRIVE1MID0gKHJlc3RhdXJhbnQgPSBzZWxmLnJlc3RhdXJhbnQpID0+IHtcbiAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LW5hbWUnKTtcbiAgbmFtZS5pbm5lckhUTUwgPSByZXN0YXVyYW50Lm5hbWU7XG5cbiAgY29uc3QgYWRkcmVzcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWFkZHJlc3MnKTtcbiAgYWRkcmVzcy5pbm5lckhUTUwgPSByZXN0YXVyYW50LmFkZHJlc3M7XG5cbiAgY29uc3QgcGljdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LXBpY3R1cmUnKTtcbiAgcGljdHVyZS5jbGFzc05hbWUgPSAncmVzdGF1cmFudC1waWN0dXJlJztcblxuICBjb25zdCBmYXZCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmF2YnV0dG9uJyk7XG4gIGlmIChyZXN0YXVyYW50LmlzX2Zhdm9yaXRlID09PSAnZmFsc2UnKSB7XG4gICAgZmF2YnV0dG9uLmNsYXNzTmFtZSA9IFwiaGVhcnQtaW5hY3RpdmVcIlxuICB9XG4gIGVsc2Uge1xuICAgIGZhdmJ1dHRvbi5jbGFzc05hbWUgPSAnaGVhcnQtYWN0aXZlJztcbiAgfVxuXG4gIGNvbnN0IHNyYzEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc291cmNlLTEnKTtcbiAgc3JjMS5tZWRpYSA9IFwiKG1pbi13aWR0aDogNzUwcHgpXCJcbiAgc3JjMS5zcmNzZXQgPSBgJHtEQkhlbHBlci5pbWFnZVVybEJhc2VQYXRofSR7REJIZWxwZXIuaW1hZ2VOYW1lRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tODAwX2xhcmdlXzF4LmpwZyAxeGA7XG4gIHNyYzEuc3Jjc2V0ICs9IGAsJHtEQkhlbHBlci5pbWFnZVVybEJhc2VQYXRofSR7REJIZWxwZXIuaW1hZ2VOYW1lRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tMTIwMF9sYXJnZV8yeC5qcGcgMnhgO1xuXG4gIGNvbnN0IHNyYzIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc291cmNlLTInKTtcbiAgc3JjMi5tZWRpYSA9IFwiKG1pbi13aWR0aDogNTAwcHgpXCJcbiAgc3JjMi5zcmNzZXQgPSBgJHtEQkhlbHBlci5pbWFnZVVybEJhc2VQYXRofSR7REJIZWxwZXIuaW1hZ2VOYW1lRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tbWVkaXVtLmpwZ2A7XG5cbiAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1pbWcnKTtcbiAgaW1hZ2UuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnQtaW1nJ1xuICBpbWFnZS5zcmMgPSBEQkhlbHBlci5pbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCk7XG4gIGltYWdlLmFsdCA9IFwiSW1hZ2Ugb2YgdGhlIHJlc3RhdXJhbnQgXCIgKyByZXN0YXVyYW50Lm5hbWU7XG5cbiAgY29uc3QgY3Vpc2luZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWN1aXNpbmUnKTtcbiAgY3Vpc2luZS5pbm5lckhUTUwgPSByZXN0YXVyYW50LmN1aXNpbmVfdHlwZTtcblxuICAvLyBmaWxsIG9wZXJhdGluZyBob3Vyc1xuICBpZiAocmVzdGF1cmFudC5vcGVyYXRpbmdfaG91cnMpIHtcbiAgICBmaWxsUmVzdGF1cmFudEhvdXJzSFRNTCgpO1xuICB9XG4gIC8vIGZpbGwgcmV2aWV3c1xuICBmaWxsUmV2aWV3c0hUTUwoKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgcmVzdGF1cmFudCBvcGVyYXRpbmcgaG91cnMgSFRNTCB0YWJsZSBhbmQgYWRkIGl0IHRvIHRoZSB3ZWJwYWdlLlxuICovXG5maWxsUmVzdGF1cmFudEhvdXJzSFRNTCA9IChvcGVyYXRpbmdIb3VycyA9IHNlbGYucmVzdGF1cmFudC5vcGVyYXRpbmdfaG91cnMpID0+IHtcbiAgY29uc3QgaG91cnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1ob3VycycpO1xuICBmb3IgKGxldCBrZXkgaW4gb3BlcmF0aW5nSG91cnMpIHtcbiAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xuXG4gICAgY29uc3QgZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICBkYXkuaW5uZXJIVE1MID0ga2V5O1xuICAgIHJvdy5hcHBlbmRDaGlsZChkYXkpO1xuXG4gICAgY29uc3QgdGltZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgdGltZS5pbm5lckhUTUwgPSBvcGVyYXRpbmdIb3Vyc1trZXldO1xuICAgIHJvdy5hcHBlbmRDaGlsZCh0aW1lKTtcblxuICAgIGhvdXJzLmFwcGVuZENoaWxkKHJvdyk7XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYWxsIHJldmlld3MgSFRNTCBhbmQgYWRkIHRoZW0gdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmZpbGxSZXZpZXdzSFRNTCA9IChyZXZpZXdzID0gc2VsZi5yZXN0YXVyYW50LnJldmlld3MpID0+IHtcbiAgaWYgKCFyZXZpZXdzKSB7XG4gICAgd29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICAgIGNtZDogJ2ZldGNoX3Jldmlld3MnLFxuICAgICAgaWQ6IHNlbGYucmVzdGF1cmFudC5pZFxuICAgIH0pO1xuICB9XG4gIGVsc2Uge1xuICAgIGdlbmVyYXRlUmV2aWV3c0hUTUwocmV2aWV3cyk7XG4gIH1cbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSByZXZpZXdzIEhUTUxcbiAqL1xuZ2VuZXJhdGVSZXZpZXdzSFRNTCA9IHJldmlld3MgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1jb250YWluZXInKTtcbiAgY29uc3QgcmV2aWV3c01zZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXZpZXdzLW1lc3NhZ2UnKTtcblxuICBpZiAoIXJldmlld3MpIHtcbiAgICByZXZpZXdzTXNnLmlubmVySFRNTCA9ICdObyByZXZpZXdzIHlldCEnO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtbGlzdCcpO1xuICB1bC5pbm5lckhUTUwgPSAnJztcbiAgcmV2aWV3c01zZy5pbm5lckhUTUwgPSAnJztcbiAgcmV2aWV3cy5mb3JFYWNoKHJldmlldyA9PiB7XG4gICAgdWwuYXBwZW5kQ2hpbGQoY3JlYXRlUmV2aWV3SFRNTChyZXZpZXcpKTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlIHJldmlldyBIVE1MIGFuZCBhZGQgaXQgdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmNyZWF0ZVJldmlld0hUTUwgPSAocmV2aWV3KSA9PiB7XG4gIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpdi5jbGFzc05hbWUgPSBcInJldmlldy1oZWFkZXJcIjtcbiAgbGkuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICBjb25zdCBuYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgbmFtZS5pbm5lckhUTUwgPSByZXZpZXcubmFtZTtcbiAgZGl2LmFwcGVuZENoaWxkKG5hbWUpO1xuXG4gIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGRhdGUuaW5uZXJIVE1MID0gcmV2aWV3LmRhdGU7XG4gIGRhdGUuY2xhc3NOYW1lID0gXCJyZXZpZXctZGF0ZVwiO1xuICBkaXYuYXBwZW5kQ2hpbGQoZGF0ZSk7XG5cbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBib2R5LmNsYXNzTmFtZSA9IFwicmV2aWV3LWJvZHlcIjtcbiAgbGkuYXBwZW5kQ2hpbGQoYm9keSk7XG5cbiAgY29uc3QgcmF0aW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICByYXRpbmcuaW5uZXJIVE1MID0gYFJhdGluZzogJHtyZXZpZXcucmF0aW5nfWA7XG4gIHJhdGluZy5jbGFzc05hbWUgPSBcInJldmlldy1yYXRpbmdcIlxuICBib2R5LmFwcGVuZENoaWxkKHJhdGluZyk7XG5cbiAgY29uc3QgY29tbWVudHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGNvbW1lbnRzLmlubmVySFRNTCA9IHJldmlldy5jb21tZW50cztcbiAgYm9keS5hcHBlbmRDaGlsZChjb21tZW50cyk7XG5cbiAgcmV0dXJuIGxpO1xufVxuXG4vKipcbiAqIEFkZCByZXN0YXVyYW50IG5hbWUgdG8gdGhlIGJyZWFkY3J1bWIgbmF2aWdhdGlvbiBtZW51XG4gKi9cbmZpbGxCcmVhZGNydW1iID0gKHJlc3RhdXJhbnQ9c2VsZi5yZXN0YXVyYW50KSA9PiB7XG4gIGNvbnN0IGJyZWFkY3J1bWIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnJlYWRjcnVtYicpO1xuICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIGxpLmlubmVySFRNTCA9IHJlc3RhdXJhbnQubmFtZTtcbiAgYnJlYWRjcnVtYi5hcHBlbmRDaGlsZChsaSk7XG59XG5cbi8qKlxuICogR2V0IGEgcGFyYW1ldGVyIGJ5IG5hbWUgZnJvbSBwYWdlIFVSTC5cbiAqL1xuZ2V0UGFyYW1ldGVyQnlOYW1lID0gKG5hbWUsIHVybCkgPT4ge1xuICBpZiAoIXVybClcbiAgICB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW1xcW1xcXV0vZywgJ1xcXFwkJicpO1xuICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoYFs/Jl0ke25hbWV9KD0oW14mI10qKXwmfCN8JClgKSxcbiAgICByZXN1bHRzID0gcmVnZXguZXhlYyh1cmwpO1xuICBpZiAoIXJlc3VsdHMpXG4gICAgcmV0dXJuIG51bGw7XG4gIGlmICghcmVzdWx0c1syXSlcbiAgICByZXR1cm4gJyc7XG4gIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG59XG5cbi8qKlxuICogRXhwYW5kIGFkZCByZXZpZXcgIFxuICovXG5jb25zdCBhZGRSZXZpZXdCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkLXJldmlldycpO1xuYWRkUmV2aWV3QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXQtcmV2aWV3Jyk7XG4gIGZvcm0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIGFkZFJldmlld0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcbn0pO1xuXG4vKipcbiAqIFBvc3QgcmV2aWV3XG4gKi9cbmNvbnN0IHBvc3RSZXZpZXdCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9zdC1yZXZpZXcnKTtcbnBvc3RSZXZpZXdCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBcbiAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYW1lJyk7XG4gIGNvbnN0IGNvbW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnRzJyk7XG4gIGNvbnN0IHJhdGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyYXRpbmcnKTtcblxuICAvLyBWYWxpZGF0ZSByZXZpZXcgZmllbGRzXG4gIGlmIChuYW1lLnZhbHVlID09PSAnJyB8fCBjb21tZW50cy52YWx1ZSA9PT0gJycgfHwgcmF0aW5nLnZhbHVlID09PSAnJykgcmV0dXJuO1xuXG4gIGNvbnN0IHJldmlldyA9IHt9XG4gIHJldmlldy5uYW1lID0gbmFtZS52YWx1ZTtcbiAgcmV2aWV3LnJhdGluZyA9IHJhdGluZy52YWx1ZTtcbiAgcmV2aWV3LmNvbW1lbnRzID0gY29tbWVudHMudmFsdWU7XG4gIHJldmlldy5kYXRlID0gbW9tZW50KCkuZm9ybWF0KCdNTU1NIEQsIFlZWVknKTtcbiAgcmV2aWV3LnN5bmNlZCA9IGZhbHNlO1xuXG4gIC8vIFJlc2V0IHZhbHVlc1xuICBuYW1lLnZhbHVlID0gJyc7XG4gIGNvbW1lbnRzLnZhbHVlID0gJyc7XG4gIHJhdGluZy52YWx1ZSA9IC0xO1xuXG4gIC8vIEZldGNoIHJlc3RhdXJhbnQgZnJvbSBEQlxuICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRCeUlkKHNlbGYucmVzdGF1cmFudC5pZCwgKGVycm9yLCByZXN0YXVyYW50KSA9PiB7XG4gICAgaWYgKHJlc3RhdXJhbnQpIHtcbiAgICAgIHNlbGYucmVzdGF1cmFudCA9IHJlc3RhdXJhbnQ7XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNlbGYucmVzdGF1cmFudC5yZXZpZXdzKSkge1xuICAgICAgICBzZWxmLnJlc3RhdXJhbnQucmV2aWV3cy5wdXNoKHJldmlldyk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgc2VsZi5yZXN0YXVyYW50LnJldmlld3MgPSBbXTtcbiAgICAgICAgc2VsZi5yZXN0YXVyYW50LnJldmlld3MucHVzaChyZXZpZXcpO1xuICAgICAgfVxuXG4gICAgICBEQkhlbHBlci51cGRhdGVSZXN0YXVyYW50UmV2aWV3cyhzZWxmLnJlc3RhdXJhbnQpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0LXJldmlldycpO1xuICAgICAgICAgIGZvcm0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgICAgICAgIGFkZFJldmlld0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSk7XG5cbiAgICAgICAgICBjb25zdCB0b2FzdCA9IFRvYXN0LmNyZWF0ZSh7XG4gICAgICAgICAgICB0ZXh0OiBcIlJldmlldyBzdWJtaXR0ZWQuXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBUb2FzdC5zZXRUaW1lb3V0KHRvYXN0LmlkLCAyMDAwKTtcblxuICAgICAgICAgIGZpbGxSZXZpZXdzSFRNTCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbi8qKlxuICogSGFuZGxlIGZhdm9yaXRlIGJ1dHRvblxuICovXG5jb25zdCBmYXZCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmF2YnV0dG9uJyk7XG5mYXZidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBpZiAoZmF2YnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnaGVhcnQtYWN0aXZlJykpIHtcbiAgICBzZWxmLnJlc3RhdXJhbnQuaXNfZmF2b3JpdGUgPSBmYWxzZTtcbiAgICBmYXZidXR0b24uY2xhc3NOYW1lID0gJ2hlYXJ0LWluYWN0aXZlJztcbiAgICBEQkhlbHBlci5mYXZvcml0ZVJlc3RhdXJhbnQoc2VsZi5yZXN0YXVyYW50KTtcbiAgfVxuICBlbHNlIHtcbiAgICBzZWxmLnJlc3RhdXJhbnQuaXNfZmF2b3JpdGUgPSB0cnVlO1xuICAgIGZhdmJ1dHRvbi5jbGFzc05hbWUgPSAnaGVhcnQtYWN0aXZlJztcbiAgICBEQkhlbHBlci5mYXZvcml0ZVJlc3RhdXJhbnQoc2VsZi5yZXN0YXVyYW50KTtcbiAgfVxufSlcblxuLyoqXG4gKiBPZmZsaW5lIGV2ZW50IGhhbmRsZXJcbiAqL1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCAoKSA9PiB7XG4gIGNvbnN0IHRvYXN0ID0gVG9hc3QuY3JlYXRlKHtcbiAgICB0ZXh0OiBcIlVuYWJsZSB0byBjb25uZWN0LiBSZXRyeWluZy4uLlwiXG4gIH0pO1xuXG4gIFRvYXN0LnNldFRpbWVvdXQodG9hc3QuaWQsIDUwMDApO1xufSk7XG5cbi8qKlxuICogT25saW5lIGV2ZW50IGhhbmRsZXJcbiAqL1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsICgpID0+IHtcbiAgd29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICBjbWQ6ICdzeW5jX3Jldmlld3MnXG4gIH0pO1xufSkiXX0=
