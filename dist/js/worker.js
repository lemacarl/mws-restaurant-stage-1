importScripts('libs.js');
self.addEventListener('message', e => {
  switch (e.data.cmd) {
    case 'fetch_reviews':
      DBHelper.fetchRestaurantReviewsById(e.data.id, (error, reviews) => {
        if (error) {
          postMessage({
            cmd: e.data.cmd,
            error: error
          });
        } else {
          postMessage({
            cmd: e.data.cmd,
            error: null,
            reviews: reviews
          });
        }
      });
      break;

    case 'sync_reviews':
      DBHelper.syncReviews();
      break;

    case 'fetch_cuisines':
      DBHelper.fetchCuisines((error, cuisines) => {
        if (error) {
          postMessage({
            cmd: e.data.cmd,
            error: error
          });
        } else {
          postMessage({
            cmd: e.data.cmd,
            error: null,
            cuisines: cuisines
          });
        }
      });
      break;

    case 'fetch_restaurant_cuisine_neighborhood':
      DBHelper.fetchRestaurantByCuisineAndNeighborhood(e.data.cuisine, e.data.neighborhood, (error, restaurants) => {
        if (error) {
          postMessage({
            cmd: e.data.cmd,
            error: error
          });
        } else {
          postMessage({
            cmd: e.data.cmd,
            error: null,
            restaurants: restaurants
          });
        }
      });
      break;

    case 'fetch_neighborhoods':
      DBHelper.fetchNeighborhoods((error, neighborhoods) => {
        if (error) {
          postMessage({
            cmd: e.data.cmd,
            error: error
          });
        } else {
          postMessage({
            cmd: e.data.cmd,
            error: null,
            neighborhoods: neighborhoods
          });
        }
      });
      break;

    case 'fetch_restaurant':
      DBHelper.fetchRestaurantById(e.data.id, (error, restaurant) => {
        if (!restaurant) {
          postMessage({
            cmd: e.data.cmd,
            error: error
          });
        }

        postMessage({
          cmd: e.data.cmd,
          error: null,
          restaurant: restaurant
        });
      });
      break;
  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmtlci5qcyJdLCJuYW1lcyI6WyJpbXBvcnRTY3JpcHRzIiwic2VsZiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGF0YSIsImNtZCIsIkRCSGVscGVyIiwiZmV0Y2hSZXN0YXVyYW50UmV2aWV3c0J5SWQiLCJpZCIsImVycm9yIiwicmV2aWV3cyIsInBvc3RNZXNzYWdlIiwic3luY1Jldmlld3MiLCJmZXRjaEN1aXNpbmVzIiwiY3Vpc2luZXMiLCJmZXRjaFJlc3RhdXJhbnRCeUN1aXNpbmVBbmROZWlnaGJvcmhvb2QiLCJjdWlzaW5lIiwibmVpZ2hib3Job29kIiwicmVzdGF1cmFudHMiLCJmZXRjaE5laWdoYm9yaG9vZHMiLCJuZWlnaGJvcmhvb2RzIiwiZmV0Y2hSZXN0YXVyYW50QnlJZCIsInJlc3RhdXJhbnQiXSwibWFwcGluZ3MiOiJBQUFBQSxhQUFhLENBQUMsU0FBRCxDQUFiO0FBRUFDLElBQUksQ0FBQ0MsZ0JBQUwsQ0FBc0IsU0FBdEIsRUFBaUNDLENBQUMsSUFBSTtBQUNyQyxVQUFPQSxDQUFDLENBQUNDLElBQUYsQ0FBT0MsR0FBZDtBQUNPLFNBQUssZUFBTDtBQUNJQyxNQUFBQSxRQUFRLENBQUNDLDBCQUFULENBQW9DSixDQUFDLENBQUNDLElBQUYsQ0FBT0ksRUFBM0MsRUFBK0MsQ0FBQ0MsS0FBRCxFQUFRQyxPQUFSLEtBQW9CO0FBQy9ELFlBQUlELEtBQUosRUFBVztBQUNQRSxVQUFBQSxXQUFXLENBQUM7QUFDUk4sWUFBQUEsR0FBRyxFQUFFRixDQUFDLENBQUNDLElBQUYsQ0FBT0MsR0FESjtBQUVSSSxZQUFBQSxLQUFLLEVBQUVBO0FBRkMsV0FBRCxDQUFYO0FBSUgsU0FMRCxNQU1LO0FBQ0RFLFVBQUFBLFdBQVcsQ0FBQztBQUNSTixZQUFBQSxHQUFHLEVBQUVGLENBQUMsQ0FBQ0MsSUFBRixDQUFPQyxHQURKO0FBRVJJLFlBQUFBLEtBQUssRUFBRSxJQUZDO0FBR1JDLFlBQUFBLE9BQU8sRUFBRUE7QUFIRCxXQUFELENBQVg7QUFLSDtBQUNKLE9BZEQ7QUFlQTs7QUFDSixTQUFLLGNBQUw7QUFDSUosTUFBQUEsUUFBUSxDQUFDTSxXQUFUO0FBQ0E7O0FBQ1YsU0FBSyxnQkFBTDtBQUNVTixNQUFBQSxRQUFRLENBQUNPLGFBQVQsQ0FBdUIsQ0FBQ0osS0FBRCxFQUFRSyxRQUFSLEtBQXFCO0FBQ3hDLFlBQUlMLEtBQUosRUFBVztBQUNQRSxVQUFBQSxXQUFXLENBQUM7QUFDUk4sWUFBQUEsR0FBRyxFQUFFRixDQUFDLENBQUNDLElBQUYsQ0FBT0MsR0FESjtBQUVSSSxZQUFBQSxLQUFLLEVBQUVBO0FBRkMsV0FBRCxDQUFYO0FBSUgsU0FMRCxNQU1LO0FBQ0RFLFVBQUFBLFdBQVcsQ0FBQztBQUNSTixZQUFBQSxHQUFHLEVBQUVGLENBQUMsQ0FBQ0MsSUFBRixDQUFPQyxHQURKO0FBRVJJLFlBQUFBLEtBQUssRUFBRSxJQUZDO0FBR1JLLFlBQUFBLFFBQVEsRUFBRUE7QUFIRixXQUFELENBQVg7QUFLSDtBQUNKLE9BZEQ7QUFlQTs7QUFDVixTQUFLLHVDQUFMO0FBQ0NSLE1BQUFBLFFBQVEsQ0FBQ1MsdUNBQVQsQ0FBaURaLENBQUMsQ0FBQ0MsSUFBRixDQUFPWSxPQUF4RCxFQUFpRWIsQ0FBQyxDQUFDQyxJQUFGLENBQU9hLFlBQXhFLEVBQXNGLENBQUNSLEtBQUQsRUFBUVMsV0FBUixLQUF3QjtBQUMxRyxZQUFJVCxLQUFKLEVBQVc7QUFDUkUsVUFBQUEsV0FBVyxDQUFDO0FBQ1hOLFlBQUFBLEdBQUcsRUFBRUYsQ0FBQyxDQUFDQyxJQUFGLENBQU9DLEdBREQ7QUFFWEksWUFBQUEsS0FBSyxFQUFFQTtBQUZJLFdBQUQsQ0FBWDtBQUlGLFNBTEQsTUFNSztBQUNQRSxVQUFBQSxXQUFXLENBQUM7QUFDWE4sWUFBQUEsR0FBRyxFQUFFRixDQUFDLENBQUNDLElBQUYsQ0FBT0MsR0FERDtBQUVYSSxZQUFBQSxLQUFLLEVBQUUsSUFGSTtBQUdYUyxZQUFBQSxXQUFXLEVBQUVBO0FBSEYsV0FBRCxDQUFYO0FBS0c7QUFDSixPQWREO0FBZUQ7O0FBQ0EsU0FBSyxxQkFBTDtBQUNDWixNQUFBQSxRQUFRLENBQUNhLGtCQUFULENBQTRCLENBQUNWLEtBQUQsRUFBUVcsYUFBUixLQUEwQjtBQUNsRCxZQUFJWCxLQUFKLEVBQVc7QUFDUkUsVUFBQUEsV0FBVyxDQUFDO0FBQ1hOLFlBQUFBLEdBQUcsRUFBRUYsQ0FBQyxDQUFDQyxJQUFGLENBQU9DLEdBREQ7QUFFWEksWUFBQUEsS0FBSyxFQUFFQTtBQUZJLFdBQUQsQ0FBWDtBQUlGLFNBTEQsTUFNSztBQUNQRSxVQUFBQSxXQUFXLENBQUM7QUFDWE4sWUFBQUEsR0FBRyxFQUFFRixDQUFDLENBQUNDLElBQUYsQ0FBT0MsR0FERDtBQUVYSSxZQUFBQSxLQUFLLEVBQUUsSUFGSTtBQUdYVyxZQUFBQSxhQUFhLEVBQUVBO0FBSEosV0FBRCxDQUFYO0FBS0c7QUFDRixPQWRIO0FBZUE7O0FBQ0QsU0FBSyxrQkFBTDtBQUNJZCxNQUFBQSxRQUFRLENBQUNlLG1CQUFULENBQTZCbEIsQ0FBQyxDQUFDQyxJQUFGLENBQU9JLEVBQXBDLEVBQXdDLENBQUNDLEtBQUQsRUFBUWEsVUFBUixLQUF1QjtBQUM3RCxZQUFJLENBQUNBLFVBQUwsRUFBaUI7QUFDaEJYLFVBQUFBLFdBQVcsQ0FBQztBQUNYTixZQUFBQSxHQUFHLEVBQUVGLENBQUMsQ0FBQ0MsSUFBRixDQUFPQyxHQUREO0FBRVhJLFlBQUFBLEtBQUssRUFBRUE7QUFGSSxXQUFELENBQVg7QUFJQTs7QUFFREUsUUFBQUEsV0FBVyxDQUFDO0FBQ1hOLFVBQUFBLEdBQUcsRUFBRUYsQ0FBQyxDQUFDQyxJQUFGLENBQU9DLEdBREQ7QUFFWEksVUFBQUEsS0FBSyxFQUFFLElBRkk7QUFHWGEsVUFBQUEsVUFBVSxFQUFFQTtBQUhELFNBQUQsQ0FBWDtBQUtELE9BYkQ7QUFjSDtBQXZGRjtBQXlGQSxDQTFGRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydFNjcmlwdHMoJ2xpYnMuanMnKTtcblxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgZSA9PiB7XG5cdHN3aXRjaChlLmRhdGEuY21kKSB7XG4gICAgICAgIGNhc2UgJ2ZldGNoX3Jldmlld3MnOlxuICAgICAgICAgICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50UmV2aWV3c0J5SWQoZS5kYXRhLmlkLCAoZXJyb3IsIHJldmlld3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY21kOiBlLmRhdGEuY21kLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbWQ6IGUuZGF0YS5jbWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldmlld3M6IHJldmlld3NcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnc3luY19yZXZpZXdzJzpcbiAgICAgICAgICAgIERCSGVscGVyLnN5bmNSZXZpZXdzKCk7XG4gICAgICAgICAgICBicmVhaztcblx0XHRjYXNlICdmZXRjaF9jdWlzaW5lcyc6XG4gICAgICAgICAgICBEQkhlbHBlci5mZXRjaEN1aXNpbmVzKChlcnJvciwgY3Vpc2luZXMpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY21kOiBlLmRhdGEuY21kLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbWQ6IGUuZGF0YS5jbWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1aXNpbmVzOiBjdWlzaW5lc1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuXHRcdGNhc2UgJ2ZldGNoX3Jlc3RhdXJhbnRfY3Vpc2luZV9uZWlnaGJvcmhvb2QnOlxuXHRcdFx0REJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50QnlDdWlzaW5lQW5kTmVpZ2hib3Job29kKGUuZGF0YS5jdWlzaW5lLCBlLmRhdGEubmVpZ2hib3Job29kLCAoZXJyb3IsIHJlc3RhdXJhbnRzKSA9PiB7XG5cdFx0ICAgIFx0aWYgKGVycm9yKSB7XG5cdFx0XHQgICAgICBcdHBvc3RNZXNzYWdlKHtcblx0XHRcdCAgICAgIFx0XHRjbWQ6IGUuZGF0YS5jbWQsXG5cdFx0XHQgICAgICBcdFx0ZXJyb3I6IGVycm9yLFxuXHRcdFx0ICAgICAgXHR9KTtcblx0XHQgICAgXHR9IFxuXHRcdCAgICBcdGVsc2Uge1xuXHRcdFx0XHRcdHBvc3RNZXNzYWdlKHtcblx0XHRcdFx0XHRcdGNtZDogZS5kYXRhLmNtZCxcblx0XHRcdFx0XHRcdGVycm9yOiBudWxsLFxuXHRcdFx0XHRcdFx0cmVzdGF1cmFudHM6IHJlc3RhdXJhbnRzXG5cdFx0XHRcdFx0fSk7XG5cdFx0ICAgIFx0fVxuXHRcdFx0fSk7XG5cdFx0YnJlYWs7XG5cdFx0Y2FzZSAnZmV0Y2hfbmVpZ2hib3Job29kcyc6XG5cdFx0XHREQkhlbHBlci5mZXRjaE5laWdoYm9yaG9vZHMoKGVycm9yLCBuZWlnaGJvcmhvb2RzKSA9PiB7XG5cdFx0ICAgIFx0aWYgKGVycm9yKSB7XG5cdFx0XHQgICAgICBcdHBvc3RNZXNzYWdlKHtcblx0XHRcdCAgICAgIFx0XHRjbWQ6IGUuZGF0YS5jbWQsXG5cdFx0XHQgICAgICBcdFx0ZXJyb3I6IGVycm9yLFxuXHRcdFx0ICAgICAgXHR9KTtcblx0XHQgICAgXHR9IFxuXHRcdCAgICBcdGVsc2Uge1xuXHRcdFx0XHRcdHBvc3RNZXNzYWdlKHtcblx0XHRcdFx0XHRcdGNtZDogZS5kYXRhLmNtZCxcblx0XHRcdFx0XHRcdGVycm9yOiBudWxsLFxuXHRcdFx0XHRcdFx0bmVpZ2hib3Job29kczogbmVpZ2hib3Job29kc1xuXHRcdFx0XHRcdH0pO1xuXHRcdCAgICBcdH1cblx0ICBcdFx0fSk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlICdmZXRjaF9yZXN0YXVyYW50Jzpcblx0XHQgICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50QnlJZChlLmRhdGEuaWQsIChlcnJvciwgcmVzdGF1cmFudCkgPT4ge1xuXHRcdCAgICAgIGlmICghcmVzdGF1cmFudCkge1xuXHRcdCAgICAgIFx0cG9zdE1lc3NhZ2Uoe1xuXHRcdCAgICAgIFx0XHRjbWQ6IGUuZGF0YS5jbWQsXG5cdFx0ICAgICAgXHRcdGVycm9yOiBlcnJvcixcblx0XHQgICAgICBcdH0pO1xuXHRcdCAgICAgIH1cblx0XHQgICAgICBcblx0XHQgICAgICBwb3N0TWVzc2FnZSh7XG5cdFx0ICAgICAgXHRjbWQ6IGUuZGF0YS5jbWQsXG5cdFx0ICAgICAgXHRlcnJvcjogbnVsbCxcblx0XHQgICAgICBcdHJlc3RhdXJhbnQ6IHJlc3RhdXJhbnRcblx0XHQgICAgICB9KTtcblx0XHQgICAgfSk7XG5cdFx0XHRicmVhaztcblx0fVxufSk7Il0sImZpbGUiOiJ3b3JrZXIuanMifQ==
